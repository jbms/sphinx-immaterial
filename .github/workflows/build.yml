name: Build

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
        node-version:
          - '16.x'
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        # Need full history to determine version number.
        fetch-depth: 0
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      with:
        path: "**/node_modules"
        key: ${{ runner.os }}-${{ matrix.node-version }}-node_modules-${{ hashFiles('**/package-lock.json') }}
    - name: Setup Graphviz
      uses: ts-graphviz/setup-graphviz@c001ccfb5aff62e28bda6a6c39b59a7e061be5b9 # v1.2.0
      with:
        macos-skip-brew-update: 'true'
    - run: npm install
    - run: npm run check
    - name: Install Python packaging, linting, & testing tools
      run: python -m pip install -r dev-requirements.txt -r requirements.txt -r tests/requirements.txt
    - run: mypy
    - run: pylint sphinx_immaterial/
    - run: black . --color --diff --check
    - name: Check for dirty working directory
      run: git diff --exit-code
    - name: Show package version
      run: python setup.py --version
    - name: Build wheel
      run: python setup.py sdist bdist_wheel
    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v3
      if: ${{ matrix.python-version == '3.10' }}
      with:
        name: python-packages-${{ runner.os }}
        path: |
          dist/*.whl
          dist/*.tar.*
    - name: Install wheel and dependencies for docs
      run: pip install dist/*.whl -r docs/requirements.txt
      shell: bash
    - name: Run Python tests
      run: pytest
    - name: Build html docs
      working-directory: docs
      run: sphinx-build . _build/html -W --keep-going -T
    - name: Build dirhtml docs
      working-directory: docs
      run: sphinx-build . _build/dirhtml -W --keep-going -T -b dirhtml
    - name: Build latex docs
      working-directory: docs
      run: sphinx-build -b latex . _build/latex -W --keep-going -T
    - name: Upload doc builds as artifacts
      if: ${{ matrix.python-version == '3.10' }}
      uses: actions/upload-artifact@v3
      with:
        name: doc-builds-${{ runner.os }}
        path: docs/_build/
    - name: upload docs to github pages
      # if: ${{ github.event_name == 'release'}}
      if: ${{ matrix.python-version == '3.10' && github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && runner.os == 'Linux' }}
      uses: peaceiris/actions-gh-pages@de7ea6f8efb354206b205ef54722213d99067935 # pinned to v3.9.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html

  release:
    if: ${{ github.event_name == 'push' && github.repository == 'antmicro/sphinx-immaterial' && (github.ref == 'refs/heads/main') }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: python-packages-Linux
          path: dist
      - run: mv dist/*.whl dist/sphinx_immaterial-0.0.post1.tip-py3-none-any.whl
      - uses: pyTooling/Actions/releaser@r0
        with:
          token: ${{ github.token }}
          files: dist/*.whl
