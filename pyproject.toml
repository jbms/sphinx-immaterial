[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm"]

[tool.pyright]
typeCheckingMode = "basic" # avoid 'strict' because it doesn't allow downgrading checks' severity
reportGeneralTypeIssues = false  # TODO
# reportFunctionMemberAccess = "waring" WILL NOT FIX (rST roles conventionally violate this)
reportMissingTypeStubs = "warning"
reportImportCycles = false  # TODO
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportWildcardImportFromLibrary = true
reportOptionalSubscript = false  # TODO (mostly about dict.get() returning None by default)
reportOptionalMemberAccess = false  # TODO (mostly related to sphinx builder env properties)
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true
reportUntypedBaseClass = true
reportUntypedNamedTuple = true
# reportPrivateUsage = "warning" # WILL NOT FIX (some monkey patching requires using private members)
reportPrivateImportUsage = false  # WILL NOT FIX (due to aliases about different python versions)
reportConstantRedefinition = true
# reportIncompatibleMethodOverride = "warning" # WILL NOT FIX (we will not be subject to deps' generic typing)
reportIncompatibleVariableOverride = true
reportInconsistentConstructor = true
reportOverlappingOverload = true
# reportMissingSuperCall = "warning" # BUGGY (rely on pylint for better accuracy)
reportUninitializedInstanceVariable = "warning"
# reportUnknownParameterType = true # TODO (we seem to have a bad habit here)
# reportUnknownArgumentType = true # WILL NOT FIX (mostly related to __get__ on iterables and sequences)
# reportUnknownLambdaType = true # WILL NOT FIX (typing lambdas' params must be inferred - no PEP provides a explicit typing solution)
# reportUnknownVariableType = true # WILL NOT FIX (mostly related to "blank" defaults)
# reportUnknownMemberType = true # BUGGY/WILL NOT FIX (mostly related to "blank" defaults and base class methods)
# reportMissingParameterType = true # BUGGY (use reportUnknownParameterType instead)
# reportMissingTypeArgument = "warning" # TODO should be fixed, but work to a solution is a bit complicated
reportCallInDefaultInitializer = "waring"
reportUnnecessaryIsInstance = true
reportUnnecessaryCast = "information"
reportUnnecessaryComparison = true
reportUnboundVariable = false  # TODO
reportUnusedExpression = true
reportUnnecessaryTypeIgnoreComment = "information"
include = ["sphinx_immaterial/**"]
exclude = ["node_modules/**", "setup.py"]